- name: "Create service directory for {{ service_name }}"
  ansible.builtin.file:
    path: "{{ base_dir }}/{{ service_name }}"
    state: directory
    mode: "0755"
  when: service_docker_compose

- name: "Copy docker compose file for {{ service_name }}"
  ansible.builtin.copy:
    src: "docker-compose.yml"
    dest: "{{ base_dir }}/{{ service_name }}/docker-compose.yml"
    mode: "0644"
  when: service_docker_compose

- name: "Create systemd service for {{ service_name }}"
  ansible.builtin.copy:
    dest: "/etc/systemd/system/{{ service_name }}.service"
    content: |
      [Unit]
      Description={{ service_name }} service
      Requires=docker.service
      After=docker.service

      [Service]
      Restart=on-failure

      WorkingDirectory=/usr/local/services/{{ service_name }}

      ExecStart=docker compose up --build
      ExecStop=docker compose down --remove-orphans

      [Install]
      WantedBy=multi-user.target
    mode: "0644"
  when: service_systemd_service

- name: "Create TLS certificate managed by certbot for {{ service_name }}"
  ansible.builtin.include_role:
    name: geerlingguy.certbot
  vars:
    certbot_install_method: package
    certbot_auto_renew: true
    certbot_auto_renew_user: "{{ ansible_user | default(lookup('env', 'USER')) }}"
    certbot_auto_renew_hour: "3"
    certbot_auto_renew_minute: "30"
    certbot_create_if_missing: true
    certbot_admin_email: "{{ certbot_email }}"

    certbot_certs:
      - domains:
          - "{{ service_fqdn }}"
  when: service_certbot

- name: "Create NGINX configuration files for {{ service_name }}"
  ansible.builtin.template:
    src: nginx.j2
    dest: "/etc/nginx/sites-available/{{ service_fqdn }}"
    mode: "0644"
  vars:
    server_name: "{{ service_fqdn }}"
    server_port: "{{ service_nginx_port }}"
  when: service_nginx

- name: "Create NGINX symlink for {{ service_name }}"
  ansible.builtin.file:
    src: "/etc/nginx/sites-available/{{ service_fqdn }}"
    dest: "/etc/nginx/sites-enabled/{{ service_fqdn }}"
    state: link
    force: true
    follow: false
    mode: "0644"
  when: service_nginx

- name: Store the Tor hostname
  ansible.builtin.shell: |
    cat /var/lib/tor/{{ domain }}/hostname
  register: tor_hostname
  when: service_tor

- name: Display the Tor hostname
  ansible.builtin.debug:
    msg: "{{ tor_hostname.stdout }}"
  when:
    - service_tor
    - tor_hostname is defined

- name: "Configure NGINX for Tor hidden servives (subdomains) for {{ service_name }}"
  ansible.builtin.shell: |
    grep "listen {{ tor_unix_socket }};" "/etc/nginx/sites-available/{{ service_fqdn }}" && exit 0

    sed \
      -i "/etc/nginx/sites-available/{{ service_fqdn }}"\
      -e "/^server {/a \  listen {{ tor_unix_socket }};" \
    {% if service_fqdn == domain %}
      -e "s/server_name www.{{ service_fqdn }} {{ service_fqdn }};/server_name www.{{ service_fqdn }} {{ service_fqdn }} {{ tor_hostname.stdout }};/" \
    {% else %}
      -e "s/server_name {{ service_fqdn }};/server_name {{ service_fqdn }} {{ service_fqdn | split('.') | first }}.{{ tor_hostname.stdout }};/" \
    {% endif %}
  when:
    - service_tor
    - tor_hostname is defined
