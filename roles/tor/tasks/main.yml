- name: Install Tor package
  ansible.builtin.package:
    name: tor
    state: present
  become: yes

- name: Filling Tor configuration file (torrc)
  ansible.builtin.blockinfile: 
    state: present
    insertafter: EOF
    dest: /etc/tor/torrc
    content: |
      HiddenServiceDir /var/lib/tor/{{ fqdn }}/
      HiddenServicePort 80 {{ tor_unix_socket }}
  become: yes

- name: Restart service Tor
  ansible.builtin.service:
    name: tor
    state: restarted
    enabled: yes
  become: yes

- name: Store the Tor hostname
  ansible.builtin.shell: |
    cat /var/lib/tor/{{ fqdn }}/hostname
  register: tor_hostname
  become: yes

- name: Display the Tor hostname
  ansible.builtin.debug:
    msg: "{{ tor_hostname.stdout }}"
  when: tor_hostname is defined

- name: Configure NGINX for Tor hidden servives (domain)
  ansible.builtin.blockinfile: 
    state: present
    insertafter: EOF
    dest: "/etc/nginx/sites-available/{{ fqdn }}"
    content: |
      server {
        listen {{ tor_unix_socket }};
        access_log /var/log/nginx/{{ fqdn }}.log;

        server_name {{ tor_hostname.stdout }};

        location / {
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-NginX-Proxy true;
          proxy_pass http://localhost:3000/;
          proxy_ssl_session_reuse off;
          proxy_set_header Host $http_host;
          proxy_cache_bypass $http_upgrade;
          proxy_redirect off;
        }
      }
  become: yes

- name: Configure NGINX for Tor hidden servives (subdomains)
  ansible.builtin.blockinfile: 
    state: present
    insertafter: EOF
    dest: "/etc/nginx/sites-available/{{ item.service_name }}"
    content: |
      server {
        listen {{ tor_unix_socket }};

        access_log /var/log/nginx/{{ item.service_name }}.log;

        server_name {{ item.service_name | split('.') | first }}.{{ tor_hostname.stdout }};

        location / {
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-NginX-Proxy true;
          proxy_pass http://localhost:{{ item.service_port }}/;
          proxy_ssl_session_reuse off;
          proxy_set_header Host $http_host;
          proxy_cache_bypass $http_upgrade;
          proxy_redirect off;
        }
      }
  with_items:
    - { service_name: "etherpad.{{ fqdn }}", service_port: "9001" }
    - { service_name: "search.{{ fqdn }}", service_port: "8080" }
    - { service_name: "cringe.{{ fqdn }}", service_port: "8081" }
    - { service_name: "joplin.{{ fqdn }}", service_port: "22300" }
    - { service_name: "status.{{ fqdn }}", service_port: "3001" }
  become: yes
