- name: Install NGINX packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - nginx
    # - libnginx-mod-stream
  become: yes

- name: Create NGINX mandatory directories
  block:
    - ansible.builtin.stat:
        path: /etc/nginx/sites-available/
      register: dir_exists
    
    - ansible.builtin.file:
        path: /etc/nginx/sites-available/
        state: directory
        mode: 0755
        recurse: yes
      when: dir_exists.stat.exists == false
      become: yes
    
    - ansible.builtin.stat:
        path: /etc/nginx/sites-enabled/
      register: dir_exists
    
    - ansible.builtin.file:
        path: /etc/nginx/sites-enabled/
        state: directory
        mode: 0755
        recurse: yes
      when: dir_exists.stat.exists == false
      become: yes

- name: Install services NGINX configuration files
  ansible.builtin.copy:
    dest: "/etc/nginx/sites-available/{{ item.service_name }}.{{ fqdn }}"
    content: |
      server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name search.{{ fqdn }};

        ssl_certificate /etc/letsencrypt/live/{{ item.service_name }}.{{ fqdn }}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/search.{{ fqdn }}/privkey.pem;
        ssl_session_timeout 5m;

        location / {
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-NginX-Proxy true;
          proxy_pass http://localhost:{{ item.service_port }}/;
          proxy_ssl_session_reuse off;
          proxy_set_header Host $http_host;
          proxy_cache_bypass $http_upgrade;
          proxy_redirect off;
        }
      }
  with_items:
    - { service_name: 'etherpad', service_port: '9001' }
    - { service_name: 'search', service_port: '8080' }
    - { service_name: 'cringe', service_port: '8081' }
  become: yes

# Special case
- name: Install SearXNG NGINX configuration file
  ansible.builtin.copy:
    dest: "/etc/nginx/sites-available/status.{{ fqdn }}"
    content: |
      server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name status.{{ fqdn }};

        ssl_certificate /etc/letsencrypt/live/status.{{ fqdn }}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/status.{{ fqdn }}/privkey.pem;
        ssl_session_timeout 5m;

        location / {
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   Host $host;
          proxy_pass         http://localhost:3001;
          proxy_http_version 1.1;
          proxy_set_header   Upgrade $http_upgrade;
          proxy_set_header   Connection "upgrade";
        }
      }
  become: yes

- name: Install the default NGINX configuration file
  ansible.builtin.copy:
    dest: "/etc/nginx/sites-available/default"
    content: |
      server {
        listen 80;
        listen [::]:80;
        server_name {{ fqdn }};

        return 301 https://$server_name$request_uri;
      }
  become: yes

- name: Create symlinks
  file:
    src: "/etc/nginx/sites-available/{{ service_name }}"
    dest: "/etc/nginx/sites-enabled/{{ service_name }}"
    state: link
    force: yes
    follow: false
  loop:
    - etherpad.{{ fqdn }}
    - search.{{ fqdn }}
    - cringe.{{ fqdn }}
    - status.{{ fqdn }}
    - default
  loop_control:
    loop_var: service_name
  become: yes
